/*
 * -------------------------------------------------
 *  TRON-Bioinformatics/tronflow-vcf-normalization Nextflow config file
 * -------------------------------------------------
 */

profiles {
  conda { process.conda = "$baseDir/environment.yml" }
  debug { process.beforeScript = 'echo $HOSTNAME' }
  test {
    params.reference = "$baseDir/test_data/ucsc.hg19.minimal.fasta"
    params.input_vcfs = "$baseDir/test_data/test_input.txt"
    params.cpus = 1
    params.memory = "3g"
    timeline.enabled = false
    report.enabled = false
    trace.enabled = false
    dag.enabled = false
  }
}

// Export this variable to prevent local Python libraries from conflicting with those in the container
env {
  PYTHONNOUSERSITE = 1
}

// Capture exit codes from upstream processes when piping
process.shell = ['/bin/bash', '-euo', 'pipefail']

VERSION = '2.0.0'

cleanup=true

manifest {
  name = 'TRON-Bioinformatics/tronflow-vcf-normalization'
  author = 'Pablo Riesgo-Ferreiro'
  homePage = 'https://github.com/TRON-Bioinformatics/tronflow-vcf-normalization'
  description = 'vt variant normalization pipeline'
  mainScript = 'main.nf'
  nextflowVersion = '>=19.10.0'
  version = VERSION
}

params.help_message = """
TronFlow variant normalization v${VERSION}

Usage:
    nextflow run main.nf --input_files input_files --reference reference.fasta


Input:
    * --input_vcf: the path to a single VCF to normalize (not compatible with --input_files)
    * --input_vcfs: the path to a tab-separated values file containing in each row the sample name  and path to the VCF file (not compatible with --input_vcf)
    The input file does not have header!
    Example input file:
    sample1	/path/to/your/file.vcf
    sample2	/path/to/your/file2.vcf
    * --reference: path to the FASTA genome reference (indexes expected *.fai, *.dict)

Optional input:
    * --output: the folder where to publish output
    * --skip_decompose_complex: flag indicating not to split complex variants (ie: MNVs and combinations of SNVs and indels)
    * --filter: specify a comma-separated list of filters to apply (e.g.: PASS,.), only variants with these values will be kept. If not provided all varianst are kept
    * --vcf-without-ad: indicate when the VCFs to normalize do not have the FORMAT/AD annotation

Output:
    * Normalized VCF file
    * Tab-separated values file with the absolute paths to the normalized VCF files, normalized_vcfs.txt
    * Summary statistics before and after normalization
    """
